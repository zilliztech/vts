/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.apache.seatunnel.api.table.catalog.Column
import org.apache.seatunnel.transform.common.SeaTunnelRowAccessor
import org.apache.seatunnel.api.table.catalog.CatalogTable
import org.apache.seatunnel.api.table.catalog.PhysicalColumn;
import org.apache.seatunnel.api.table.type.*;
import java.util.ArrayList;
class demo  {
    public Column[] getInlineOutputColumns(CatalogTable inputCatalogTable) {
        List<Column> columns = new ArrayList<>();
        PhysicalColumn destColumn =
                PhysicalColumn.of(
                        "aa",
                        BasicType.STRING_TYPE,
                        10,
                        true,
                        "",
                        "");
        columns.add(destColumn);
        return columns.toArray(new Column[0]);
    }
    public Object[] getInlineOutputFieldValues(SeaTunnelRowAccessor inputRow) {
        Object[] fieldValues = new Object[1];
        fieldValues[0]="AA"
        return fieldValues;
    }
};