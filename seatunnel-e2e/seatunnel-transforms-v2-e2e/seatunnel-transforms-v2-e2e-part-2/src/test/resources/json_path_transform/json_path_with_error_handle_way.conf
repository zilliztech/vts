#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file is a demonstration of streaming processing in seatunnel config
######

env {
  parallelism = 1
  job.mode = "BATCH"
}

source {
  FakeSource {
    schema = {
      fields {
        id = "bigint"
        data = "string"
      }
    }
    rows = [
      {
        kind = INSERT
        fields = [1, "{\"f1\": \"v1\"}"]
      },
      {
        kind = INSERT
        fields = [2, "{\"f1\": \"v1\", \"f2\": \"v2\"}"]
      }
    ]
  }
}

transform {
  JsonPath {

    row_error_handle_way = FAIL
    columns = [
        {
            src_field = "data"
            path = "$.f1"
            dest_field = "data_f1"
        },
        {
            src_field = "data"
            path = "$.f2"
            dest_field = "data_f2"
            column_error_handle_way = SKIP
        }
    ]
  }
}

sink {
  Assert {
      rules =
        {
          row_rules = [
            {
              rule_type = MAX_ROW
              rule_value = 2
            },
            {
              rule_type = MIN_ROW
              rule_value = 2
            }
          ],
          field_rules = [
              {
                field_name = id
                field_type = "bigint"
                field_value = [
                  {
                    rule_type = MIN
                    rule_value = 1
                  },
                  {
                    rule_type = MAX
                    rule_value = 2
                  }
                ]
              },
              {
                field_name = data_f1
                field_type = "string"
                field_value = [{equals_to = "v1"}]
              }
          ]
        }
    }
}